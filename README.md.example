# Laravel Starter 2

## Documentation

We are using [Vitepress](https://vitepress.dev/) to create the documentation.

- To run `Docs` in localhost

```
cd document
npm run install
npm run docs:dev
```

Now our `documentation` is running on `http://localhost:9090`

## About

Lorem ipsum dolor sit amet consectetur adipisicing elit. Obcaecati alias dolorem fugit unde fuga, ab amet officia nesciunt illo tenetur!

![Preview Image](./preview-img.png)

## Installation

- [Docker Installation](#docker-installation)
- [Non Docker Installation](#non-docker-installation)

## Usage

- [Docker Usage](#docker-usage)
- [Non Docker Usage](#non-docker-usage)

## Docker Installation

### Prerequisites

Before getting started, ensure that you have the following installed on your system:

- Docker
- Docker Compose

Clone the repository:

```
git clone https://github.com/repo-name/project-name.git
```

Change into the project directory:

```
cd project-name
```

Setup formatter to format before commit:

```
cp src/pre-commit .git/hooks/pre-commit
```

Change git setting if you are using Window OS

```
git config core.ignorecase false
```

Build the Docker images:

```
docker-compose build
```

Start the Docker containers:

```
docker-compose up -d
```

Install PHP dependencies:

```
docker-compose run --rm composer install
```

Install Node dependencies:

```
docker-compose run --rm npm install
```

Build assets:

```
docker-compose run --rm npm run build
```

Create a copy of the .env file::

```
cp .env.example .env
```

Generate an application key:

```
docker-compose run --rm artisan key:generate
```

Create a database and update your database connection details in `.env` file

```
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=laravel
DB_USERNAME=root
DB_PASSWORD=
```

Run database migrations:

```
docker-compose run --rm artisan migrate
```

Run database seeder:

```
docker-compose run --rm artisan db:seed
```

### OR

Run database test seeder:

```
docker-compose run --rm artisan db:test
```

The project should now be running at http://localhost.

## Non-Docker Installation

### Prerequisites

Before getting started, ensure that you have the following installed on your system:

- PHP 8 or higher
- Composer
- MySQL or PostgreSQL
- Web server (e.g. Apache or Nginx)
- Node.js 16 or higher
- NPM 8 or higher

Clone the repository:

```
git clone https://github.com/repo-name/project-name.git
```

Change into the project directory:

```
cd project/src
```

Setup formatter to format before commit:

```
cp src/pre-commit .git/hooks/pre-commit
```

Install PHP dependencies:

```
composer install
```

Install Node dependencies:

```
npm install
```

Build assets:

```
npm run build
```

Create a copy of the .env file:

```
cp .env.example .env
```

Generate an application key:

```
php artisan key:generate
```

Setup storage link

```
php artisan storage:link
```

Create a database and update your database connection details in `.env` file

```
APP_URL=http://localhost:8000

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=laravel
DB_USERNAME=root
DB_PASSWORD=
```

Run database migrations:

```
php artisan migrate
```

Run database seeder:

```
php artisan db:seed
```

### OR

Run database test seeder:

```
php artisan db:test
```

Run the dev server (the output will give the address):

```
php artisan serve
```

The project should now be running at http://localhost:8000.

## Usage

To use the project, you can interact with it via the command line or a web browser. For example:

## Docker Usage

To run a artisan command:

```
docker-compose run --rm artisan your:command
```

To run a composer command:

```
docker-compose run --rm composer your:command
```

To run a npm command:

```
docker-compose run --rm npm your:command
```

To run the [Vite](https://laravel.com/docs/10.x/vite) development server:

```
docker-compose run --rm --service-ports npm run dev
```

## Non-Docker Usage

To run a artisan command:

```
php artisan your:command
```

To run a composer command:

```
composer your:command
```

To run a npm command:

```
npm your:command
```

### Unit Testing

Create a copy of the .env.testing file:

```
cp .env.testing.example .env.testing
```

Create a database and update your database connection details in `.env.testing` file

```
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=laravel
DB_USERNAME=root
DB_PASSWORD=
```

### Non-Docker

Run database migrations:

```
php artisan migrate --env=testing
```

### Docker

Run database migrations:

```
docker-compose run --rm artisan migrate --env=testing
```

To run all tests

```
php artisan test (or) ./vendor/bin/pest
```

To run specific test

```
./vendor/bin/pest tests/Feature/ExampleTest.php
```
