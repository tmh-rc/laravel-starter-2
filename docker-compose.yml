version: '3.8'

networks:
    report-mgmt-network:

services:
    nginx:
        container_name: nginx
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        volumes:
            - ./src:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
        ports:
            - '${APP_PORT:-80}:80'
        networks:
            - report-mgmt-network
        depends_on:
            - php

    php:
        container_name: php
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        volumes:
            - ./src:/var/www/html
        networks:
            - report-mgmt-network
        depends_on:
            - mysql

    mysql:
        container_name: mysql
        image: mysql:8.0
        restart: always
        tty: true
        volumes:
            - ./docker/mysql:/var/lib/mysql
        ports:
            - '3306:3306'
        environment:
            MYSQL_DATABASE: '${DB_DATABASE:-report_mgmt}'
            # MYSQL_USER: '${DB_USERNAME}'
            # MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD:-root}'
            # MYSQL_ALLOW_EMPTY_PASSWORD: 1
        networks:
            - report-mgmt-network

    composer:
        container_name: composer
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        volumes:
            - ./src:/var/www/html
        depends_on:
            - php
        entrypoint: ['composer','--ignore-platform-reqs']
        networks:
            - report-mgmt-network

    artisan:
        container_name: artisan
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        volumes:
            - ./src:/var/www/html
        depends_on:
            - php
        entrypoint: ['php','/var/www/html/artisan']
        networks:
            - report-mgmt-network

    npm:
        container_name: npm
        image: node:current-alpine
        volumes:
            - ./src:/var/www/html
        ports:
            - "5173:5173"
        working_dir: /var/www/html
        entrypoint: ['npm']
        networks:
            - report-mgmt-network

    redis:
        container_name: redis
        image: redis:alpine
        restart: unless-stopped
        volumes:
            - "./docker/redis:/data"
        ports:
            - '${REDIS_PORT:-6379}:6379'
        networks:
            - report-mgmt-network

    mail:
        container_name: mail
        image: rnwood/smtp4dev:linux-amd64-v3
        ports:
            - 1000:80
        networks:
            - report-mgmt-network

    phpmyadmin:
        container_name: phpmyadmin
        image: phpmyadmin/phpmyadmin:latest
        restart: always
        ports:
            - 8080:80
        environment:
            - PMA_HOST=mysql
        depends_on:
            - mysql
        networks:
            - report-mgmt-network